//Automatically generated by COSI NOC 2.0C (Columbia)
#ifndef __RABBITS_NOC_COSI__
#define __RABBITS_NOC_COSI__
#include <iostream>
#include <map>
#include <vector>
#include "systemc.h"
#include "SourceNI.h"
#include "DestNI.h"
#include "Router.h"
#include "PtP.h"
#include "Technology.h"
#include "Types.h"
#include "CosiRabbitsUtil.h"

template< int FlitWidth >
class NoC_cosi_implementation_clock: public sc_module
{
public:
 	sc_in<bool> Clock ;
	
	SC_HAS_PROCESS( NoC_cosi_implementation_clock ) ;

	~NoC_cosi_implementation_clock(){
		sc_close_vcd_trace_file(trcf);	
	}

	NoC_cosi_implementation_clock( sc_module_name pName, int ni_qsize, int r_qsize ):sc_module( pName ){

	TechnologyNode TechParam ;
	TechParam = GetTechParameters( "/home/concer/ld/cosi/COSI/libraries/onchipcommunication/systemc/energy_10x10_100.dat" ) ;

	//Destination NOC_master_00 port P1 has id 0
	m_dst["NOC_master_00"] = new DestNI<FLITWIDTH>( "d_NOC_master_00", 0  ,  ni_qsize) ; 
	m_dst["NOC_master_00"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_master_00"] ) ;

	map< pair<int,int> , int > DT0 ;
	DT0[ pair<int,int>( 6 , 0) ] = 0 ; 
	DT0[ pair<int,int>( 8 , 0) ] = 0 ; 
	DT0[ pair<int,int>( 9 , 0) ] = 0 ; 
	DT0[ pair<int,int>( 12 , 0) ] = 0 ; 
	DT0[ pair<int,int>( 13 , 0) ] = 0 ; 
	vector<double> Dweights0( 1 ) ;
	Dif0 = new Router< 1 , 1 , FLITWIDTH >( "Dif0" , 1 , 2 , DT0 , Dweights0 , TechParam ) ; 
	Dif0->Clock( Clock ) ;

	 //Source NOC_master_00 port  P2 has id 0
	m_src["NOC_master_00"] = new SourceNI<FLITWIDTH>( "s_NOC_master_00" , 0 ,  ni_qsize) ;
	m_src["NOC_master_00"]->Clock( Clock) ;

	map< pair<int,int> , int > ST0 ;
	ST0[ pair<int,int>( 0 , 6) ] = 0 ; 
	ST0[ pair<int,int>( 0 , 8) ] = 0 ; 
	ST0[ pair<int,int>( 0 , 9) ] = 0 ; 
	ST0[ pair<int,int>( 0 , 12) ] = 0 ; 
	ST0[ pair<int,int>( 0 , 13) ] = 0 ; 
	vector<double> Sweights0( 1 ) ;
	Sweights0[ 0 ] = 1.0 ; 
	Sif0 = new Router< 1 , 1, FLITWIDTH > ( "Sif0" , 1 , 2 , ST0 , Sweights0 , TechParam ) ; 
	Sif0->Clock( Clock ) ;

	//Destination NOC_master_01 port P1 has id 1
	m_dst["NOC_master_01"] = new DestNI<FLITWIDTH>( "d_NOC_master_01", 1  ,  ni_qsize) ; 
	m_dst["NOC_master_01"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_master_01"] ) ;

	map< pair<int,int> , int > DT1 ;
	DT1[ pair<int,int>( 6 , 1) ] = 0 ; 
	DT1[ pair<int,int>( 8 , 1) ] = 0 ; 
	DT1[ pair<int,int>( 9 , 1) ] = 0 ; 
	DT1[ pair<int,int>( 12 , 1) ] = 0 ; 
	DT1[ pair<int,int>( 13 , 1) ] = 0 ; 
	vector<double> Dweights1( 1 ) ;
	Dif1 = new Router< 1 , 1 , FLITWIDTH >( "Dif1" , 1 , 2 , DT1 , Dweights1 , TechParam ) ; 
	Dif1->Clock( Clock ) ;

	 //Source NOC_master_01 port  P2 has id 1
	m_src["NOC_master_01"] = new SourceNI<FLITWIDTH>( "s_NOC_master_01" , 1 ,  ni_qsize) ;
	m_src["NOC_master_01"]->Clock( Clock) ;

	map< pair<int,int> , int > ST1 ;
	ST1[ pair<int,int>( 1 , 6) ] = 0 ; 
	ST1[ pair<int,int>( 1 , 8) ] = 0 ; 
	ST1[ pair<int,int>( 1 , 9) ] = 0 ; 
	ST1[ pair<int,int>( 1 , 12) ] = 0 ; 
	ST1[ pair<int,int>( 1 , 13) ] = 0 ; 
	vector<double> Sweights1( 1 ) ;
	Sweights1[ 0 ] = 1.0 ; 
	Sif1 = new Router< 1 , 1, FLITWIDTH > ( "Sif1" , 1 , 2 , ST1 , Sweights1 , TechParam ) ; 
	Sif1->Clock( Clock ) ;

	//Destination NOC_master_02 port P1 has id 2
	m_dst["NOC_master_02"] = new DestNI<FLITWIDTH>( "d_NOC_master_02", 2  ,  ni_qsize) ; 
	m_dst["NOC_master_02"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_master_02"] ) ;

	map< pair<int,int> , int > DT2 ;
	DT2[ pair<int,int>( 6 , 2) ] = 0 ; 
	DT2[ pair<int,int>( 8 , 2) ] = 0 ; 
	DT2[ pair<int,int>( 9 , 2) ] = 0 ; 
	DT2[ pair<int,int>( 12 , 2) ] = 0 ; 
	DT2[ pair<int,int>( 13 , 2) ] = 0 ; 
	vector<double> Dweights2( 1 ) ;
	Dif2 = new Router< 1 , 1 , FLITWIDTH >( "Dif2" , 1 , 2 , DT2 , Dweights2 , TechParam ) ; 
	Dif2->Clock( Clock ) ;

	 //Source NOC_master_02 port  P2 has id 2
	m_src["NOC_master_02"] = new SourceNI<FLITWIDTH>( "s_NOC_master_02" , 2 ,  ni_qsize) ;
	m_src["NOC_master_02"]->Clock( Clock) ;

	map< pair<int,int> , int > ST2 ;
	ST2[ pair<int,int>( 2 , 6) ] = 0 ; 
	ST2[ pair<int,int>( 2 , 8) ] = 0 ; 
	ST2[ pair<int,int>( 2 , 9) ] = 0 ; 
	ST2[ pair<int,int>( 2 , 12) ] = 0 ; 
	ST2[ pair<int,int>( 2 , 13) ] = 0 ; 
	vector<double> Sweights2( 1 ) ;
	Sweights2[ 0 ] = 1.0 ; 
	Sif2 = new Router< 1 , 1, FLITWIDTH > ( "Sif2" , 1 , 2 , ST2 , Sweights2 , TechParam ) ; 
	Sif2->Clock( Clock ) ;

	//Destination NOC_master_03 port P1 has id 3
	m_dst["NOC_master_03"] = new DestNI<FLITWIDTH>( "d_NOC_master_03", 3  ,  ni_qsize) ; 
	m_dst["NOC_master_03"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_master_03"] ) ;

	map< pair<int,int> , int > DT3 ;
	DT3[ pair<int,int>( 7 , 3) ] = 0 ; 
	vector<double> Dweights3( 1 ) ;
	Dif3 = new Router< 1 , 1 , FLITWIDTH >( "Dif3" , 1 , 2 , DT3 , Dweights3 , TechParam ) ; 
	Dif3->Clock( Clock ) ;

	 //Source NOC_master_03 port  P2 has id 3
	m_src["NOC_master_03"] = new SourceNI<FLITWIDTH>( "s_NOC_master_03" , 3 ,  ni_qsize) ;
	m_src["NOC_master_03"]->Clock( Clock) ;

	map< pair<int,int> , int > ST3 ;
	ST3[ pair<int,int>( 3 , 7) ] = 0 ; 
	vector<double> Sweights3( 1 ) ;
	Sweights3[ 0 ] = 1.0 ; 
	Sif3 = new Router< 1 , 1, FLITWIDTH > ( "Sif3" , 1 , 2 , ST3 , Sweights3 , TechParam ) ; 
	Sif3->Clock( Clock ) ;

	//Destination NOC_master_04 port P1 has id 4
	m_dst["NOC_master_04"] = new DestNI<FLITWIDTH>( "d_NOC_master_04", 4  ,  ni_qsize) ; 
	m_dst["NOC_master_04"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_master_04"] ) ;

	map< pair<int,int> , int > DT4 ;
	DT4[ pair<int,int>( 7 , 4) ] = 0 ; 
	vector<double> Dweights4( 1 ) ;
	Dif4 = new Router< 1 , 1 , FLITWIDTH >( "Dif4" , 1 , 2 , DT4 , Dweights4 , TechParam ) ; 
	Dif4->Clock( Clock ) ;

	 //Source NOC_master_04 port  P2 has id 4
	m_src["NOC_master_04"] = new SourceNI<FLITWIDTH>( "s_NOC_master_04" , 4 ,  ni_qsize) ;
	m_src["NOC_master_04"]->Clock( Clock) ;

	map< pair<int,int> , int > ST4 ;
	ST4[ pair<int,int>( 4 , 7) ] = 0 ; 
	vector<double> Sweights4( 1 ) ;
	Sweights4[ 0 ] = 1.0 ; 
	Sif4 = new Router< 1 , 1, FLITWIDTH > ( "Sif4" , 1 , 2 , ST4 , Sweights4 , TechParam ) ; 
	Sif4->Clock( Clock ) ;

	//Destination NOC_master_05 port P1 has id 5
	m_dst["NOC_master_05"] = new DestNI<FLITWIDTH>( "d_NOC_master_05", 5  ,  ni_qsize) ; 
	m_dst["NOC_master_05"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_master_05"] ) ;

	map< pair<int,int> , int > DT5 ;
	DT5[ pair<int,int>( 10 , 5) ] = 0 ; 
	DT5[ pair<int,int>( 11 , 5) ] = 0 ; 
	vector<double> Dweights5( 1 ) ;
	Dif5 = new Router< 1 , 1 , FLITWIDTH >( "Dif5" , 1 , 2 , DT5 , Dweights5 , TechParam ) ; 
	Dif5->Clock( Clock ) ;

	 //Source NOC_master_05 port  P2 has id 5
	m_src["NOC_master_05"] = new SourceNI<FLITWIDTH>( "s_NOC_master_05" , 5 ,  ni_qsize) ;
	m_src["NOC_master_05"]->Clock( Clock) ;

	map< pair<int,int> , int > ST5 ;
	ST5[ pair<int,int>( 5 , 10) ] = 0 ; 
	ST5[ pair<int,int>( 5 , 11) ] = 0 ; 
	vector<double> Sweights5( 1 ) ;
	Sweights5[ 0 ] = 1.0 ; 
	Sif5 = new Router< 1 , 1, FLITWIDTH > ( "Sif5" , 1 , 2 , ST5 , Sweights5 , TechParam ) ; 
	Sif5->Clock( Clock ) ;

	//Destination NOC_slave_00 port P1 has id 6
	m_dst["NOC_slave_00"] = new DestNI<FLITWIDTH>( "d_NOC_slave_00", 6  ,  ni_qsize) ; 
	m_dst["NOC_slave_00"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_00"] ) ;

	map< pair<int,int> , int > DT6 ;
	DT6[ pair<int,int>( 0 , 6) ] = 0 ; 
	DT6[ pair<int,int>( 1 , 6) ] = 0 ; 
	DT6[ pair<int,int>( 2 , 6) ] = 0 ; 
	vector<double> Dweights6( 1 ) ;
	Dif6 = new Router< 1 , 1 , FLITWIDTH >( "Dif6" , 1 , 2 , DT6 , Dweights6 , TechParam ) ; 
	Dif6->Clock( Clock ) ;

	 //Source NOC_slave_00 port  P2 has id 6
	m_src["NOC_slave_00"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_00" , 6 ,  ni_qsize) ;
	m_src["NOC_slave_00"]->Clock( Clock) ;

	map< pair<int,int> , int > ST6 ;
	ST6[ pair<int,int>( 6 , 0) ] = 0 ; 
	ST6[ pair<int,int>( 6 , 1) ] = 0 ; 
	ST6[ pair<int,int>( 6 , 2) ] = 0 ; 
	vector<double> Sweights6( 1 ) ;
	Sweights6[ 0 ] = 1.0 ; 
	Sif6 = new Router< 1 , 1, FLITWIDTH > ( "Sif6" , 1 , 2 , ST6 , Sweights6 , TechParam ) ; 
	Sif6->Clock( Clock ) ;

	//Destination NOC_slave_01 port P1 has id 7
	m_dst["NOC_slave_01"] = new DestNI<FLITWIDTH>( "d_NOC_slave_01", 7  ,  ni_qsize) ; 
	m_dst["NOC_slave_01"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_01"] ) ;

	map< pair<int,int> , int > DT7 ;
	DT7[ pair<int,int>( 3 , 7) ] = 0 ; 
	DT7[ pair<int,int>( 4 , 7) ] = 0 ; 
	vector<double> Dweights7( 1 ) ;
	Dif7 = new Router< 1 , 1 , FLITWIDTH >( "Dif7" , 1 , 2 , DT7 , Dweights7 , TechParam ) ; 
	Dif7->Clock( Clock ) ;

	 //Source NOC_slave_01 port  P2 has id 7
	m_src["NOC_slave_01"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_01" , 7 ,  ni_qsize) ;
	m_src["NOC_slave_01"]->Clock( Clock) ;

	map< pair<int,int> , int > ST7 ;
	ST7[ pair<int,int>( 7 , 3) ] = 0 ; 
	ST7[ pair<int,int>( 7 , 4) ] = 0 ; 
	vector<double> Sweights7( 1 ) ;
	Sweights7[ 0 ] = 1.0 ; 
	Sif7 = new Router< 1 , 1, FLITWIDTH > ( "Sif7" , 1 , 2 , ST7 , Sweights7 , TechParam ) ; 
	Sif7->Clock( Clock ) ;

	//Destination NOC_slave_02 port P1 has id 8
	m_dst["NOC_slave_02"] = new DestNI<FLITWIDTH>( "d_NOC_slave_02", 8  ,  ni_qsize) ; 
	m_dst["NOC_slave_02"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_02"] ) ;

	map< pair<int,int> , int > DT8 ;
	DT8[ pair<int,int>( 0 , 8) ] = 0 ; 
	DT8[ pair<int,int>( 1 , 8) ] = 0 ; 
	DT8[ pair<int,int>( 2 , 8) ] = 0 ; 
	vector<double> Dweights8( 1 ) ;
	Dif8 = new Router< 1 , 1 , FLITWIDTH >( "Dif8" , 1 , 2 , DT8 , Dweights8 , TechParam ) ; 
	Dif8->Clock( Clock ) ;

	 //Source NOC_slave_02 port  P2 has id 8
	m_src["NOC_slave_02"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_02" , 8 ,  ni_qsize) ;
	m_src["NOC_slave_02"]->Clock( Clock) ;

	map< pair<int,int> , int > ST8 ;
	ST8[ pair<int,int>( 8 , 0) ] = 0 ; 
	ST8[ pair<int,int>( 8 , 1) ] = 0 ; 
	ST8[ pair<int,int>( 8 , 2) ] = 0 ; 
	vector<double> Sweights8( 1 ) ;
	Sweights8[ 0 ] = 1.0 ; 
	Sif8 = new Router< 1 , 1, FLITWIDTH > ( "Sif8" , 1 , 2 , ST8 , Sweights8 , TechParam ) ; 
	Sif8->Clock( Clock ) ;

	//Destination NOC_slave_03 port P1 has id 9
	m_dst["NOC_slave_03"] = new DestNI<FLITWIDTH>( "d_NOC_slave_03", 9  ,  ni_qsize) ; 
	m_dst["NOC_slave_03"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_03"] ) ;

	map< pair<int,int> , int > DT9 ;
	DT9[ pair<int,int>( 0 , 9) ] = 0 ; 
	DT9[ pair<int,int>( 1 , 9) ] = 0 ; 
	DT9[ pair<int,int>( 2 , 9) ] = 0 ; 
	vector<double> Dweights9( 1 ) ;
	Dif9 = new Router< 1 , 1 , FLITWIDTH >( "Dif9" , 1 , 2 , DT9 , Dweights9 , TechParam ) ; 
	Dif9->Clock( Clock ) ;

	 //Source NOC_slave_03 port  P2 has id 9
	m_src["NOC_slave_03"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_03" , 9 ,  ni_qsize) ;
	m_src["NOC_slave_03"]->Clock( Clock) ;

	map< pair<int,int> , int > ST9 ;
	ST9[ pair<int,int>( 9 , 0) ] = 0 ; 
	ST9[ pair<int,int>( 9 , 1) ] = 0 ; 
	ST9[ pair<int,int>( 9 , 2) ] = 0 ; 
	vector<double> Sweights9( 1 ) ;
	Sweights9[ 0 ] = 1.0 ; 
	Sif9 = new Router< 1 , 1, FLITWIDTH > ( "Sif9" , 1 , 2 , ST9 , Sweights9 , TechParam ) ; 
	Sif9->Clock( Clock ) ;

	//Destination NOC_slave_04 port P1 has id 10
	m_dst["NOC_slave_04"] = new DestNI<FLITWIDTH>( "d_NOC_slave_04", 10  ,  ni_qsize) ; 
	m_dst["NOC_slave_04"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_04"] ) ;

	map< pair<int,int> , int > DT10 ;
	DT10[ pair<int,int>( 5 , 10) ] = 0 ; 
	vector<double> Dweights10( 1 ) ;
	Dif10 = new Router< 1 , 1 , FLITWIDTH >( "Dif10" , 1 , 2 , DT10 , Dweights10 , TechParam ) ; 
	Dif10->Clock( Clock ) ;

	 //Source NOC_slave_04 port  P2 has id 10
	m_src["NOC_slave_04"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_04" , 10 ,  ni_qsize) ;
	m_src["NOC_slave_04"]->Clock( Clock) ;

	map< pair<int,int> , int > ST10 ;
	ST10[ pair<int,int>( 10 , 5) ] = 0 ; 
	vector<double> Sweights10( 1 ) ;
	Sweights10[ 0 ] = 1.0 ; 
	Sif10 = new Router< 1 , 1, FLITWIDTH > ( "Sif10" , 1 , 2 , ST10 , Sweights10 , TechParam ) ; 
	Sif10->Clock( Clock ) ;

	//Destination NOC_slave_05 port P1 has id 11
	m_dst["NOC_slave_05"] = new DestNI<FLITWIDTH>( "d_NOC_slave_05", 11  ,  ni_qsize) ; 
	m_dst["NOC_slave_05"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_05"] ) ;

	map< pair<int,int> , int > DT11 ;
	DT11[ pair<int,int>( 5 , 11) ] = 0 ; 
	vector<double> Dweights11( 1 ) ;
	Dif11 = new Router< 1 , 1 , FLITWIDTH >( "Dif11" , 1 , 2 , DT11 , Dweights11 , TechParam ) ; 
	Dif11->Clock( Clock ) ;

	 //Source NOC_slave_05 port  P2 has id 11
	m_src["NOC_slave_05"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_05" , 11 ,  ni_qsize) ;
	m_src["NOC_slave_05"]->Clock( Clock) ;

	map< pair<int,int> , int > ST11 ;
	ST11[ pair<int,int>( 11 , 5) ] = 0 ; 
	vector<double> Sweights11( 1 ) ;
	Sweights11[ 0 ] = 1.0 ; 
	Sif11 = new Router< 1 , 1, FLITWIDTH > ( "Sif11" , 1 , 2 , ST11 , Sweights11 , TechParam ) ; 
	Sif11->Clock( Clock ) ;

	//Destination NOC_slave_06 port P1 has id 12
	m_dst["NOC_slave_06"] = new DestNI<FLITWIDTH>( "d_NOC_slave_06", 12  ,  ni_qsize) ; 
	m_dst["NOC_slave_06"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_06"] ) ;

	map< pair<int,int> , int > DT12 ;
	DT12[ pair<int,int>( 0 , 12) ] = 0 ; 
	DT12[ pair<int,int>( 1 , 12) ] = 0 ; 
	DT12[ pair<int,int>( 2 , 12) ] = 0 ; 
	vector<double> Dweights12( 1 ) ;
	Dif12 = new Router< 1 , 1 , FLITWIDTH >( "Dif12" , 1 , 2 , DT12 , Dweights12 , TechParam ) ; 
	Dif12->Clock( Clock ) ;

	 //Source NOC_slave_06 port  P2 has id 12
	m_src["NOC_slave_06"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_06" , 12 ,  ni_qsize) ;
	m_src["NOC_slave_06"]->Clock( Clock) ;

	map< pair<int,int> , int > ST12 ;
	ST12[ pair<int,int>( 12 , 0) ] = 0 ; 
	ST12[ pair<int,int>( 12 , 1) ] = 0 ; 
	ST12[ pair<int,int>( 12 , 2) ] = 0 ; 
	vector<double> Sweights12( 1 ) ;
	Sweights12[ 0 ] = 1.0 ; 
	Sif12 = new Router< 1 , 1, FLITWIDTH > ( "Sif12" , 1 , 2 , ST12 , Sweights12 , TechParam ) ; 
	Sif12->Clock( Clock ) ;

	//Destination NOC_slave_07 port P1 has id 13
	m_dst["NOC_slave_07"] = new DestNI<FLITWIDTH>( "d_NOC_slave_07", 13  ,  ni_qsize) ; 
	m_dst["NOC_slave_07"]->Clock( Clock ) ;
	_CosiAddDestNI_( m_dst["NOC_slave_07"] ) ;

	map< pair<int,int> , int > DT13 ;
	DT13[ pair<int,int>( 0 , 13) ] = 0 ; 
	DT13[ pair<int,int>( 1 , 13) ] = 0 ; 
	DT13[ pair<int,int>( 2 , 13) ] = 0 ; 
	vector<double> Dweights13( 1 ) ;
	Dif13 = new Router< 1 , 1 , FLITWIDTH >( "Dif13" , 1 , 2 , DT13 , Dweights13 , TechParam ) ; 
	Dif13->Clock( Clock ) ;

	 //Source NOC_slave_07 port  P2 has id 13
	m_src["NOC_slave_07"] = new SourceNI<FLITWIDTH>( "s_NOC_slave_07" , 13 ,  ni_qsize) ;
	m_src["NOC_slave_07"]->Clock( Clock) ;

	map< pair<int,int> , int > ST13 ;
	ST13[ pair<int,int>( 13 , 0) ] = 0 ; 
	ST13[ pair<int,int>( 13 , 1) ] = 0 ; 
	ST13[ pair<int,int>( 13 , 2) ] = 0 ; 
	vector<double> Sweights13( 1 ) ;
	Sweights13[ 0 ] = 1.0 ; 
	Sif13 = new Router< 1 , 1, FLITWIDTH > ( "Sif13" , 1 , 2 , ST13 , Sweights13 , TechParam ) ; 
	Sif13->Clock( Clock ) ;

	map< pair<int,int> , int > RT56 ;
	RT56[ pair<int,int>( 3 , 7) ] = 0 ; 
	RT56[ pair<int,int>( 4 , 7) ] = 0 ; 
	vector<double> Weights56( 2 ) ;
	Weights56[ 0] = 0.666667 ; 
	Weights56[ 1] = 0.333333 ; 
	R56= new Router< 2 , 1, FLITWIDTH >( "R56" , 1 , 2 , RT56 , Weights56 , TechParam ) ; 
	R56->Clock( Clock ) ;

	map< pair<int,int> , int > RT58 ;
	RT58[ pair<int,int>( 7 , 3) ] = 0 ; 
	RT58[ pair<int,int>( 7 , 4) ] = 1 ; 
	vector<double> Weights58( 1 ) ;
	Weights58[ 0] = 1 ; 
	R58= new Router< 1 , 2, FLITWIDTH >( "R58" , 1 , 2 , RT58 , Weights58 , TechParam ) ; 
	R58->Clock( Clock ) ;

	map< pair<int,int> , int > RT138 ;
	RT138[ pair<int,int>( 5 , 10) ] = 0 ; 
	RT138[ pair<int,int>( 5 , 11) ] = 1 ; 
	vector<double> Weights138( 1 ) ;
	Weights138[ 0] = 1 ; 
	R138= new Router< 1 , 2, FLITWIDTH >( "R138" , 1 , 2 , RT138 , Weights138 , TechParam ) ; 
	R138->Clock( Clock ) ;

	map< pair<int,int> , int > RT160 ;
	RT160[ pair<int,int>( 0 , 6) ] = 0 ; 
	RT160[ pair<int,int>( 0 , 8) ] = 1 ; 
	RT160[ pair<int,int>( 0 , 9) ] = 2 ; 
	RT160[ pair<int,int>( 0 , 12) ] = 3 ; 
	RT160[ pair<int,int>( 0 , 13) ] = 4 ; 
	RT160[ pair<int,int>( 1 , 6) ] = 0 ; 
	RT160[ pair<int,int>( 1 , 8) ] = 1 ; 
	RT160[ pair<int,int>( 1 , 9) ] = 2 ; 
	RT160[ pair<int,int>( 1 , 12) ] = 3 ; 
	RT160[ pair<int,int>( 1 , 13) ] = 4 ; 
	RT160[ pair<int,int>( 2 , 6) ] = 0 ; 
	RT160[ pair<int,int>( 2 , 8) ] = 1 ; 
	RT160[ pair<int,int>( 2 , 9) ] = 2 ; 
	RT160[ pair<int,int>( 2 , 12) ] = 3 ; 
	RT160[ pair<int,int>( 2 , 13) ] = 4 ; 
	vector<double> Weights160( 3 ) ;
	Weights160[ 0] = 0.397126 ; 
	Weights160[ 1] = 0.280228 ; 
	Weights160[ 2] = 0.322646 ; 
	R160= new Router< 3 , 5, FLITWIDTH >( "R160" , 1 , 2 , RT160 , Weights160 , TechParam ) ; 
	R160->Clock( Clock ) ;

	map< pair<int,int> , int > RT164 ;
	RT164[ pair<int,int>( 6 , 0) ] = 0 ; 
	RT164[ pair<int,int>( 6 , 1) ] = 1 ; 
	RT164[ pair<int,int>( 6 , 2) ] = 2 ; 
	RT164[ pair<int,int>( 8 , 0) ] = 0 ; 
	RT164[ pair<int,int>( 8 , 1) ] = 1 ; 
	RT164[ pair<int,int>( 8 , 2) ] = 2 ; 
	RT164[ pair<int,int>( 9 , 0) ] = 0 ; 
	RT164[ pair<int,int>( 9 , 1) ] = 1 ; 
	RT164[ pair<int,int>( 9 , 2) ] = 2 ; 
	RT164[ pair<int,int>( 12 , 0) ] = 0 ; 
	RT164[ pair<int,int>( 12 , 1) ] = 1 ; 
	RT164[ pair<int,int>( 12 , 2) ] = 2 ; 
	RT164[ pair<int,int>( 13 , 0) ] = 0 ; 
	RT164[ pair<int,int>( 13 , 1) ] = 1 ; 
	RT164[ pair<int,int>( 13 , 2) ] = 2 ; 
	vector<double> Weights164( 5 ) ;
	Weights164[ 0] = 0.978981 ; 
	Weights164[ 1] = 1.91483e-06 ; 
	Weights164[ 2] = 6.14041e-05 ; 
	Weights164[ 3] = 3.73625e-06 ; 
	Weights164[ 4] = 0.0209523 ; 
	R164= new Router< 5 , 3, FLITWIDTH >( "R164" , 1 , 2 , RT164 , Weights164 , TechParam ) ; 
	R164->Clock( Clock ) ;

	map< pair<int,int> , int > RT200 ;
	RT200[ pair<int,int>( 10 , 5) ] = 0 ; 
	RT200[ pair<int,int>( 11 , 5) ] = 0 ; 
	vector<double> Weights200( 2 ) ;
	Weights200[ 0] = 0.5 ; 
	Weights200[ 1] = 0.5 ; 
	R200= new Router< 2 , 1, FLITWIDTH >( "R200" , 1 , 2 , RT200 , Weights200 , TechParam ) ; 
	R200->Clock( Clock ) ;

	RAB_COSI_IF_TO_DEST_CONNECTION( 0 , 0 , NOC_master_00 , "NOC_master_00" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_00 , 0, "NOC_master_00" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 1 , 0 , NOC_master_01 , "NOC_master_01" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_01 , 1, "NOC_master_01" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 2 , 0 , NOC_master_02 , "NOC_master_02" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_02 , 2, "NOC_master_02" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 3 , 0 , NOC_master_03 , "NOC_master_03" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_03 , 3, "NOC_master_03" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 4 , 0 , NOC_master_04 , "NOC_master_04" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_04 , 4, "NOC_master_04" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 5 , 0 , NOC_master_05 , "NOC_master_05" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_05 , 5, "NOC_master_05" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 6 , 0 , NOC_slave_00 , "NOC_slave_00" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_00 , 6, "NOC_slave_00" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 7 , 0 , NOC_slave_01 , "NOC_slave_01" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_01 , 7, "NOC_slave_01" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 8 , 0 , NOC_slave_02 , "NOC_slave_02" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_02 , 8, "NOC_slave_02" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 9 , 0 , NOC_slave_03 , "NOC_slave_03" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_03 , 9, "NOC_slave_03" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 10 , 0 , NOC_slave_04 , "NOC_slave_04" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_04 , 10, "NOC_slave_04" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 11 , 0 , NOC_slave_05 , "NOC_slave_05" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_05 , 11, "NOC_slave_05" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 12 , 0 , NOC_slave_06 , "NOC_slave_06" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_06 , 12, "NOC_slave_06" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_DEST_CONNECTION( 13 , 0 , NOC_slave_07 , "NOC_slave_07" , 6 , 0.0 ) ; 
	RAB_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_07 , 13, "NOC_slave_07" , 0 , 6 , 0.0 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 0 , 0 , 160 , 0 , 6 , 0.000116987 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 1 , 0 , 160 , 1 , 6 , 0.00105096 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 2 , 0 , 160 , 2 , 6 , 0.000949038 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 3 , 0 , 56 , 0 , 6 , 0.000766506 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 4 , 0 , 56 , 1 , 6 , 0.00130048 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 5 , 0 , 138 , 0 , 6 , 0.000883975 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 6 , 0 , 164 , 0 , 6 , 0.00148301 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 7 , 0 , 58 , 0 , 6 , 0.000100481 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 8 , 0 , 164 , 1 , 6 , 0.00265096 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 9 , 0 , 164 , 2 , 6 , 0.00151699 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 10 , 0 , 200 , 0 , 6 , 0.00211699 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 11 , 0 , 200 , 1 , 6 , 0.000949038 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 12 , 0 , 164 , 3 , 6 , 0.00165096 )  ; 
	RAB_COSI_IF_TO_ROUTER_CONNECTION( 13 , 0 , 164 , 4 , 6 , 0.00165096 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 56 , 0 , 7 , 0 , 6 , 0.000300481 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 58 , 0 , 3 , 0 , 6 , 0.000966506 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 58 , 1 , 4 , 0 , 6 , 0.00110048 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 138 , 0 , 10 , 0 , 6 , 0.00281603 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 138 , 1 , 11 , 0 , 6 , 0.000183975 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 160 , 0 , 6 , 0 , 6 , 0.00188301 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 160 , 1 , 8 , 0 , 6 , 0.00305096 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 160 , 2 , 9 , 0 , 6 , 0.00111699 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 160 , 3 , 12 , 0 , 6 , 0.00205096 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 160 , 4 , 13 , 0 , 6 , 0.00205096 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 164 , 0 , 0 , 0 , 6 , 0.000516987 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 164 , 1 , 1 , 0 , 6 , 0.000650962 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 164 , 2 , 2 , 0 , 6 , 0.00134904 )  ; 
	RAB_COSI_ROUTER_TO_IF_CONNECTION( 200 , 0 , 5 , 0 , 6 , 0.000116987 )  ; 
//Monitor< FLITWIDTH> M("Monitor" , 0.000001 , _CosiDestNIVector_ ) ;
};
protected:
	sc_trace_file *trcf;
	map<string, SourceNI<FlitWidth>*> m_src;
	map<string, DestNI<FlitWidth>*> m_dst; 
	map<string, PtP<FlitWidth>*> m_ptp; 
	map<int, sc_module*> interf;
	map<int, sc_module*> routers;

	vector< DestNI<FlitWidth>* > _CosiDestNIVector_ ;
	stringstream _cosiptpname_ ;
	void _CosiAddDestNI_( DestNI<FlitWidth>* D ) {
		_CosiDestNIVector_.push_back( D ) ;
	}
	DEF_COSI_IF_TO_DEST_CONNECTION( 0 , 0 , NOC_master_00 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_00 , 0 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 1 , 0 , NOC_master_01 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_01 , 1 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 2 , 0 , NOC_master_02 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_02 , 2 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 3 , 0 , NOC_master_03 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_03 , 3 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 4 , 0 , NOC_master_04 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_04 , 4 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 5 , 0 , NOC_master_05 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_master_05 , 5 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 6 , 0 , NOC_slave_00 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_00 , 6 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 7 , 0 , NOC_slave_01 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_01 , 7 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 8 , 0 , NOC_slave_02 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_02 , 8 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 9 , 0 , NOC_slave_03 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_03 , 9 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 10 , 0 , NOC_slave_04 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_04 , 10 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 11 , 0 , NOC_slave_05 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_05 , 11 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 12 , 0 , NOC_slave_06 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_06 , 12 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_DEST_CONNECTION( 13 , 0 , NOC_slave_07 , 6 , 0.0 ) ; 
	DEF_COSI_SOURCE_TO_IF_CONNECTION( NOC_slave_07 , 13 , 0 , 6 , 0.0 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 0 , 0 , 160 , 0 , 6 , 0.000116987 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 1 , 0 , 160 , 1 , 6 , 0.00105096 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 2 , 0 , 160 , 2 , 6 , 0.000949038 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 3 , 0 , 56 , 0 , 6 , 0.000766506 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 4 , 0 , 56 , 1 , 6 , 0.00130048 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 5 , 0 , 138 , 0 , 6 , 0.000883975 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 6 , 0 , 164 , 0 , 6 , 0.00148301 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 7 , 0 , 58 , 0 , 6 , 0.000100481 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 8 , 0 , 164 , 1 , 6 , 0.00265096 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 9 , 0 , 164 , 2 , 6 , 0.00151699 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 10 , 0 , 200 , 0 , 6 , 0.00211699 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 11 , 0 , 200 , 1 , 6 , 0.000949038 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 12 , 0 , 164 , 3 , 6 , 0.00165096 )  ; 
	DEF_COSI_IF_TO_ROUTER_CONNECTION( 13 , 0 , 164 , 4 , 6 , 0.00165096 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 56 , 0 , 7 , 0 , 6 , 0.000300481 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 58 , 0 , 3 , 0 , 6 , 0.000966506 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 58 , 1 , 4 , 0 , 6 , 0.00110048 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 138 , 0 , 10 , 0 , 6 , 0.00281603 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 138 , 1 , 11 , 0 , 6 , 0.000183975 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 160 , 0 , 6 , 0 , 6 , 0.00188301 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 160 , 1 , 8 , 0 , 6 , 0.00305096 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 160 , 2 , 9 , 0 , 6 , 0.00111699 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 160 , 3 , 12 , 0 , 6 , 0.00205096 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 160 , 4 , 13 , 0 , 6 , 0.00205096 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 164 , 0 , 0 , 0 , 6 , 0.000516987 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 164 , 1 , 1 , 0 , 6 , 0.000650962 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 164 , 2 , 2 , 0 , 6 , 0.00134904 )  ; 
	DEF_COSI_ROUTER_TO_IF_CONNECTION( 200 , 0 , 5 , 0 , 6 , 0.000116987 )  ; 
	Router< 1 , 1, FLITWIDTH >* Dif0; 
	Router< 1 , 1, FLITWIDTH >* Sif0; 
	Router< 1 , 1, FLITWIDTH >* Dif1; 
	Router< 1 , 1, FLITWIDTH >* Sif1; 
	Router< 1 , 1, FLITWIDTH >* Dif2; 
	Router< 1 , 1, FLITWIDTH >* Sif2; 
	Router< 1 , 1, FLITWIDTH >* Dif3; 
	Router< 1 , 1, FLITWIDTH >* Sif3; 
	Router< 1 , 1, FLITWIDTH >* Dif4; 
	Router< 1 , 1, FLITWIDTH >* Sif4; 
	Router< 1 , 1, FLITWIDTH >* Dif5; 
	Router< 1 , 1, FLITWIDTH >* Sif5; 
	Router< 1 , 1, FLITWIDTH >* Dif6; 
	Router< 1 , 1, FLITWIDTH >* Sif6; 
	Router< 1 , 1, FLITWIDTH >* Dif7; 
	Router< 1 , 1, FLITWIDTH >* Sif7; 
	Router< 1 , 1, FLITWIDTH >* Dif8; 
	Router< 1 , 1, FLITWIDTH >* Sif8; 
	Router< 1 , 1, FLITWIDTH >* Dif9; 
	Router< 1 , 1, FLITWIDTH >* Sif9; 
	Router< 1 , 1, FLITWIDTH >* Dif10; 
	Router< 1 , 1, FLITWIDTH >* Sif10; 
	Router< 1 , 1, FLITWIDTH >* Dif11; 
	Router< 1 , 1, FLITWIDTH >* Sif11; 
	Router< 1 , 1, FLITWIDTH >* Dif12; 
	Router< 1 , 1, FLITWIDTH >* Sif12; 
	Router< 1 , 1, FLITWIDTH >* Dif13; 
	Router< 1 , 1, FLITWIDTH >* Sif13; 
	Router< 2 , 1, FLITWIDTH > *R56;
	Router< 1 , 2, FLITWIDTH > *R58;
	Router< 1 , 2, FLITWIDTH > *R138;
	Router< 3 , 5, FLITWIDTH > *R160;
	Router< 5 , 3, FLITWIDTH > *R164;
	Router< 2 , 1, FLITWIDTH > *R200;

};
#endif
